From url: inspect

1) create a D2WContext with an EO containing a PK
2) will mount see that the previous is missing
3) RegisterPreviousPage



From menu: new

1) create previous with new EO
2) setPage goes through Main but which is designed to create a new D2WContext..
   and EO Cannot be created here because it need to be inserted in the cache (can only be done by Circuit)
   
==> new goes through the router ==> No eo created only None ==> D2WEditPage create an eo, register and set previous
==> through router the eo is a pk


Inspect Url (working)

1) Main Router 
   setSocket(d2wContext)
   D2WEditPage (not important)
2) socket open
    MyCircuit.dispatch(SetPageForSocketReady(d2wContext))   
      socketReady = true
      FetchShowD2WDebugButton(d2wContext)
         socket send GetDebugConfiguration
      SetDebugConfiguration
         FetchEOModelAndMenus
            socket send FetchEOModel
         SetEOModelThenFetchMenu
            FetchMenu
               socket send FetchMenus
            SetMenus
               InitAppSpecificClient
                  PrepareEODisplay
                     PrepareEODisplayRules
                        socket send CompleteEO
                     CompletedEO(d2wContext, eo, ruleResultsOpt)
                        SetPreviousWithResults
                           RegisterPreviousPage

QueryPage
    InitAppSpecificClient
        FetchMetaData
            socket.GetMetaData
                ruleActor.GetRulesForMetaData
                socketActor.MetaDataResponse
                                    

Query page from menu
    RegisterPreviousPageAndSetPage


New Project (after entering the app with inspect url)

                  PrepareEODisplay
                     PrepareEODisplayRules
                        socket send CompleteEO
                     CompletedEO
                        SetPreviousWithResults
                           RegisterPreviousPage


New Project from Menu
    PrepareEODisplay
        PrepareEODisplayRules
            socket.CompleteEO
    CompletedEO
        SetPreviousWithResults
            RegisterPreviousPageAndSetPage
        

Save a new EO and show inspect page
D2WEditPage
    SaveNewEO (CacheHandler of SPACircuit)
        socket send NewEO
            RulesActor.NewEO
                EORepoActor.NewEO
                    SavingResponse
                        SavingResponseMsgOut
        SavingEO (CacheHandler) to switch between error (-> edit) or continue saving (inspect)
            SavedEOWithResults (RuleResultsHandler)
                SavedEO
                    update cache
                RegisterPreviousPageAndSetPage
            
Inspect record from list page
    RegisterPreviousPageAndSetPage            
            

Search
    SearchAction (MyCircuit)
        socket.Search
            EORepoActor.Search
                FetchedObjectsForList
                    out.FetchedObjectsForListMsgOut
    SearchResult (CacheHandler)
        
    
    
    
Should we avoid cache for new EO ? 
@@ -539,7 +539,7 @@ class EOCacheHandler[M](modelRW: ModelRW[M, EOCache]) extends ActionHandler(mode
 
       val updatedD2WContext = d2wContext.copy(eo = Some(updatedEO))
       D2SpaLogger.logfinest(entityName,"CacheHandler | SavedEO | updatedCachesForSavedEO  " + updatedEO + " eo " + eo)
-      val newCache = EOCacheUtils.updatedCachesForSavedEO(value, updatedEO, Some(eo))
+      val newCache = EOCacheUtils.updatedDBCacheWithEO(value, updatedEO)
       D2SpaLogger.logfinest(entityName,"CacheHandler | SavedEO | updated cache " + newCache)
       D2SpaLogger.logfinest(entityName,"CacheHandler | SavedEO update cache, call action Register with context " + updatedD2WContext)
       updated(
@@ -618,12 +618,12 @@ class EOCacheHandler[M](modelRW: ModelRW[M, EOCache]) extends ActionHandler(mode
         case None =>
           // case 1: new EO
           log.finest("CacheHandler | PrepareEODisplay | New EO " + value)
-          val (newCache, newEO) = EOCacheUtils.updatedMemCacheByCreatingNewEOForEntityNamed(value, entityName)
+          val newEO = EOCacheUtils.newEOWithLastMemID(entityName, None)
           D2SpaLogger.logfinest(entityName, "newEO " + newEO)
           val updatedD2WContext = d2wContext.copy(eo = Some(newEO))
 
           // We may need to fetch rules
-          updated(newCache,Effect.action(PrepareEODisplayRules(updatedD2WContext, value,false)))
+          effectOnly(Effect.action(PrepareEODisplayRules(updatedD2WContext, value,false)))
       }
     // Update EO, stay on same page
     // Examples:

               