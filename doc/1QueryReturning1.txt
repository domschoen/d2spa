Callback.scala:120 Search: Project
client-jsdeps.js:33270 PreviousPageHandler | Search | Project | value: Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None))
client-jsdeps.js:33270 SPACircuit | Search(Project) | qualifierOpt: None
client-jsdeps.js:33270 PreviousPageHandler | Search | Project query with fs EOFetchAll(Project,List())
client-jsdeps.js:33270 PreviousPageHandler | Search | Register Previous D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)
System.scala:367 Send SearchAll(EOFetchAll(Project,List()))
System.scala:367 Send 512 bytes
System.scala:367 SPAMain | Router previous page D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Project
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: true
client-jsdeps.js:33270 Render Query page for entity: Project
System.scala:367 SPAMain | Router previous page D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Project
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: true
client-jsdeps.js:33270 Render Query page for entity: Project
client-jsdeps.js:33270 PreviousPageHandler | InitMetaData: Some(Project)
System.scala:367 Send GetMetaData(D2WContextFullFledged(Some(Project),Some(list),None,None))
System.scala:367 Send 512 bytes
System.scala:367 Will read socket
client-jsdeps.js:33270 Project -> CacheHandler | SearchResult length 1
client-jsdeps.js:33270 Project -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(),Map())
System.scala:367 Zcache Map()
System.scala:367 Zcache Vector(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None))
System.scala:367 Zresult before Map()
System.scala:367 Zresult Map(Project -> Map(EOPk(List(1)) -> EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Project
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: true
client-jsdeps.js:33270 Render Query page for entity: Project
client-jsdeps.js:33270 PreviousPageHandler | InspectEO from: query
client-jsdeps.js:33270 PreviousPageHandler | RegisterPreviousPageAndSetPage for d2wContext: D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Project
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: true
client-jsdeps.js:33270 Render Query page for entity: Project
System.scala:367 SPAMain | Router previous page D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Project
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: true
client-jsdeps.js:33270 Render Query page for entity: Project
client-jsdeps.js:33270 PreviousPageHandler | SetPage for d2wContext: D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage InspectPage(Project,1)
client-jsdeps.js:33270 PreviousPageHandler | InitMetaData: Some(Project)
System.scala:367 Send GetMetaData(D2WContextFullFledged(Some(Project),Some(inspect),None,None))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 D2WEditPage | will Mount Project
client-jsdeps.js:33270 D2WEditPage | willMount eo Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None))
client-jsdeps.js:33270 D2WEditPage | willMount d2wContext D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage | mounted | socketReady: true dataNotFetched: true previousPageHasBeenSet: true alreadySent: true
client-jsdeps.js:33270 D2WEditPage | mounted | some eo
client-jsdeps.js:33270 D2WEditPage: willMount actionList List(Hydration(DrySubstrate(None,Some(EOFault(Project,EOPk(List(1)))),None),WateringScope(PotFiredRuleResult(Left(FireRule(D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),displayPropertyKeys))))))
client-jsdeps.js:33270 RuleResultsHandler | FireActions | count: 1
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,Some(EOFault(Project,EOPk(List(1)))),None) wateringScope: WateringScope(PotFiredRuleResult(Left(FireRule(D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),displayPropertyKeys))))
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration:  wateringScope with rule To File: 
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: wateringScope with rule To File: firing | rhs FiringD2WContext(Some(Project),Some(inspect),None,PotFiringKey(Right(None)))
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: wateringScope with rule To File: firing | key displayPropertyKeys
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Project),Some(inspect),None,PotFiringKey(Right(None))),displayPropertyKeys)
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Project -> Map(EOPk(List(1)) -> EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None))),Map())
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))))
3System.scala:367 Will read socket
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults | ruleResults List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,None),displayNameForEntity,RuleValue(Some(Project),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(descr),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(descr),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(projectNumber),None),componentName,RuleValue(Some(D2WDisplayNumber),List())))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@30,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@31,<function1>,d2spa.client.services.MyCircuit$@32))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@30,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@31,<function1>,d2spa.client.services.MyCircuit$@32))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Project -> Map(EOPk(List(1)) -> EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None))),Map())
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV)))), list -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(descr),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(projectNumber),None),componentName,RuleValue(Some(D2WDisplayNumber),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))))
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults | ruleResults List(RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),None,None),displayNameForEntity,RuleValue(Some(Project),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(projectNumber, descr, customer))), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(projectNumber),None),componentName,RuleValue(Some(D2WDisplayNumber),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(descr),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(descr),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(customer),None),attributeType,RuleValue(Some(eoV),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(customer),None),componentName,RuleValue(Some(ERD2WDisplayToOne),List())))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@30,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@31,<function1>,d2spa.client.services.MyCircuit$@32))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@30,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@31,<function1>,d2spa.client.services.MyCircuit$@32))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Project -> Map(EOPk(List(1)) -> EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None))),Map())
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(inspect),Some(D2WContext(Some(Project),Some(list),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Project,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV)))), list -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(descr),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(projectNumber),None),componentName,RuleValue(Some(D2WDisplayNumber),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV)))), inspect -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(projectNumber, descr, customer))), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(projectNumber),None),componentName,RuleValue(Some(D2WDisplayNumber),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(descr),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(customer),None),componentName,RuleValue(Some(ERD2WDisplayToOne),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV))))))
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(descr, id, customer, projectNumber, type),List(StringValue(1), IntValue(1), ObjectValue(EO(Customer,List(),List(),EOPk(List(1)),None)), IntValue(1), StringValue(Project)),EOPk(List(1)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Project -> ERD2WDisplayToOne render Some(Project) task Some(inspect) propertyKey Some(customer) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Project -> ERD2WDisplayToOne render | get eo out of cache Customer eo EO(Customer,List(),List(),EOPk(List(1)),None)
client-jsdeps.js:33270 Project -> ERD2WDisplayToOne mounted
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults | ruleResults List(RuleResult(D2WContextFullFledged(Some(Project),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(projectNumber, descr, customer))))