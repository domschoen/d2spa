client-jsdeps.js:33270 new EO for entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
Callback.scala:120 New EO for: EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 PreviousPageHandler | RegisterPreviousPage for d2wContext: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | will Mount Project
client-jsdeps.js:33270 D2WEditPage | willMount eo None
client-jsdeps.js:33270 D2WEditPage | willMount d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage | mounted | socketReady: true dataNotFetched: false previousPageHasBeenSet: true alreadySent: false
client-jsdeps.js:33270 Project -> CacheHandler | NewEOWithEOModel: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
System.scala:367 value.insertedEOs Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None)))
System.scala:367 entityName Project
client-jsdeps.js:33270 Project -> newValue Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 Project -> newEO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : None
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : None



------------
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage NewEOPage(Project)
client-jsdeps.js:33270 PreviousPageHandler | RegisterPreviousPage for d2wContext: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map()), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), 
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map()), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), Ru
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 Customer -> NVListComponent mounted for Some(Customer) task Some(list) page configuration Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Customer -> NVListComponent mounted: entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent mounted: d2wContext: D2WContext(Some(Customer),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Project,List(),List(),EOPk(List(-2)),None),potentialCustomers,Customer)))),None,PotFiredKey(Right(Some(ListEmbeddedCustomer))),None)
client-jsdeps.js:33270 Customer -> NVListComponent mounted: fireDisplayPropertyKeys: true
client-jsdeps.js:33270 Customer -> NVListComponent mounted: some drySubstrate
client-jsdeps.js:33270 Customer -> NVListComponent mounted: some display property keys
client-jsdeps.js:33270 Customer -> NVListComponent mounted: hydration is defined true
client-jsdeps.js:33270 Customer -> NVListComponent mounted: FireActions: 7
client-jsdeps.js:33270 Customer -> NVListComponent mounted: actions: List(FireRules(List(acronym, address, name),D2WContext(Some(Customer),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Project,List(),List(),EOPk(List(-2)),None),potentialCustomers,Customer)))),None,PotFiredKey(Right(Some(ListEmbeddedCustomer))),None),displayNameForProperty), Hydration(DrySubstrate(Some(EOsAtKeyPath(EO(Project,List(),List(),EOPk(List(-2)),None),potentialCustomers,Customer)),None,None),WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))))))), FireRules(List(acronym, address, name),D2WContext(Some(Customer),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Project,List(),List(),EOPk(List(-2)),None),potentialCustomers,Customer)))),None,PotFiredKey(Right(Some(ListEmbeddedCustomer))),None),componentName))
client-jsdeps.js:33270 Project -> ERDList mounted Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Customer),Some(list),Some(acronym),PotFiringKey(Right(Some(ListEmbeddedCustomer)))),displayNameForProperty)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Customer),Some(list),Some(address),PotFiringKey(Right(Some(ListEmbeddedCustomer)))),displayNameForProperty)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Customer),Some(list),Some(name),PotFiringKey(Right(Some(ListEmbeddedCustomer)))),displayNameForProperty)
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(Some(EOsAtKeyPath(EO(Project,List(),List(),EOPk(List(-2)),None),potentialCustomers,Customer)),None,None) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(Some(EOsAtKeyPath(EO(Project,List(),List(),EOPk(List(-2)),None),potentialCustomers,Customer)),None,None)
client-jsdeps.js:33270 Hydration missingKeys Set(acronym, address, name)
client-jsdeps.js:33270 Hydration DrySubstrate Project for key potentialCustomers
client-jsdeps.js:33270 Hydration DrySubstrate valueForKey None
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Customer),Some(list),Some(acronym),PotFiringKey(Right(Some(ListEmbeddedCustomer)))),componentName)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Customer),Some(list),Some(address),PotFiringKey(Right(Some(ListEmbeddedCustomer)))),componentName)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Customer),Some(list),Some(name),PotFiringKey(Right(Some(ListEmbeddedCustomer)))),componentName)
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map()), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), 
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map()), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), Ru
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map()), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), 
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map()), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), Ru
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
9System.scala:367 Will read socket
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map()), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), 
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map()), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), Ru
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map()), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), 
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map()), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), Ru
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym)
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),attributeType,RuleValue(Some(stringV),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),N
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List(
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),N
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Non
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForE
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEnt
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Non
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
12System.scala:367 Will read socket
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
24System.scala:367 Will read socket
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Project,-2)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Project,-2)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Project,List(),List(),EOPk(List(-2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledge
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | Key when relathionship: YES 
System.scala:367 insertedEOsOpt objectsFromAll.. None
client-jsdeps.js:33270 ERD2WEditToOneRelationship | willReceiveProps | key when relathionship but isHydrated false
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: propertyName customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: eomodel EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted: destinationEntity Some(EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project))))
client-jsdeps.js:33270 ERD2WEditToOneRelationship mounted | keyWhenRelationshipRuleResultOpt is defined true
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,None,Some(EOFetchAll(Customer,List()))) wateringScope: WateringScope(PotFiredRuleResult(Right(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())))))
client-jsdeps.js:33270 Hydration with scope defined by rule RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List()))
client-jsdeps.js:33270 Hydration drySubstrate DrySubstrate(None,None,Some(EOFetchAll(Customer,List())))
client-jsdeps.js:33270 Hydration missingKeys Set(name)
client-jsdeps.js:33270 Hydration with fs EOFetchAll(Customer,List())
System.scala:367 Send SearchAll(EOFetchAll(Customer,List()))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 ERD2WEditToOneRelationship render
client-jsdeps.js:33270 ERD2WEditToOneRelationship render entity EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render ruleResultsModel Map(Customer -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))), list -> Map(ListEmbeddedCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,Some(ListEmbeddedCustomer)),displayPropertyKeys,RuleValue(None,List(acronym, address, name)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(acronym),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Acronym),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(address),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Address),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),Some(name),Some(ListEmbeddedCustomer)),displayNameForProperty,RuleValue(Some(Name),List()))),stringV))), NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(list),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 task  edit
client-jsdeps.js:33270 ERD2WEditToOneRelationship render propertyMetaInfo rule resultPropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),componentName,RuleValue(Some(ERD2WEditToOneRelationship),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(edit),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render Look into the cache for objects for entity named Customer
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoCache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eoRefs List(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
client-jsdeps.js:33270 ERD2WEditToOneRelationship render eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 ERD2WEditToOneRelationship render destinationEO None
client-jsdeps.js:33270 valid tuples List((2,1), (1,1))
client-jsdeps.js:33270 Project -> ERDList render Project task Some(edit) propertyKey Some(potentialCustomers) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Out of cache EOPk(List(-2))
client-jsdeps.js:33270 Cache Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None)))
client-jsdeps.js:33270 e name Project
client-jsdeps.js:33270 Project -> : Some(Customer)
client-jsdeps.js:33270 Project -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedCustomer)
client-jsdeps.js:33270 Project -> ERDList render | dataRep Project propertyName: potentialCustomers destinationEntityName: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render for entity: Customer
client-jsdeps.js:33270 Customer -> NVListComponent render |  Some(Customer) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedCustomer)))
client-jsdeps.js:33270 Customer -> NVListComponent render task displayPropertyKeys List(acronym, address, name)
client-jsdeps.js:33270 Customer -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath potentialCustomers
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo EO(Project,List(),List(),EOPk(List(-2)),None)
client-jsdeps.js:33270 Customer -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Customer -> NVListComponent render eos List()
Callback.scala:120 Menu selected: Customer
client-jsdeps.js:33270 PreviousPageHandler | RegisterPreviousPage for d2wContext: D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@1f,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@20,<function1>,d2spa.client.services.MyCircuit$@21))
client-jsdeps.js:33270 D2WEditPage | will Mount Customer
client-jsdeps.js:33270 D2WEditPage | willMount eo None
client-jsdeps.js:33270 D2WEditPage | willMount d2wContext D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : None
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
2System.scala:367 Will read socket
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult length 2
client-jsdeps.js:33270 Customer -> CacheHandler | SearchResult before cache EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))),Map(Project -> Map(EOPk(List(-1)) -> EO(Project,List(),List(),EOPk(List(-1)),None), EOPk(List(-2)) -> EO(Project,List(),List(),EOPk(List(-2)),None))))
System.scala:367 Zcache Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zcache Vector(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None))
System.scala:367 Zresult before Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None), EOPk(List(1)) -> EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(1), StringValue(1), StringValue(Customer)),EOPk(List(1)),None)))
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage QueryPage(Customer)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(list),Some(D2WContext(Some(Customer),Some(query),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Project),Some(edit),Some(D2WContext(Some(Customer),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),Some(DataRep(Some(EOFetchAll(Customer,List())),None)),None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, name, id, address, type),List(StringValue(1), StringValue(1), IntValue(2), StringValue(1), StringValue(Customer)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Project,List(),List(),EOPk(List(-2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: false
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 Render Query ruleContainer: PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),componentName,RuleValue(Some(ERD2WQueryToManyField),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(query),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV)))
client-jsdeps.js:33270 Render Query displayPropertyKeys: List(acronym, address, name, projects)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty