1) http://localhost:9000/#task/query/entity/Project
2) Search
----> No Project 
3) Return
----> Search Page

+++++++++
1) http://localhost:9000/#task/query/entity/Project
2) +
----> Edit Project 
3) Enter data and Save
----> Inspect page with data entered
4) Menu > Project
5) Search
---> Inspect page with data entered
6) Project +
7) Enter data and Save
---> Inspect page with data entered
8) Menu > Project
---> Search page 
9) Search
---> List page with 2 records and their data, edit and inspect button
19) Click the inspect of one record
---> inspect page with record data

+++++++++ 2 Projects in DB
1) Search
---> List page with 2 records and their data, edit and inspect button
2) Click the inspect of one record
---> inspect page with record data


+++++++++
1) http://localhost:9000/#task/query/entity/Project
2) +
3) Enter data and Save
---> Inspect page with data entered
4) return






Problems
---------

+++++++++ 1 +++++++++++++
1) http://localhost:9000/#task/query/entity/Product
2) +
3) Enter data
4) Add a customer
---> Added Customer is listed 
5) Save
---> Inspect page with data entered and customer listed
!! Customer not listed




2) 
When stopping D2SPAServer ?

[error] a.a.OneForOneStrategy - DrySubstrate(None,None,None) (of class d2spa.shared.DrySubstrate)
scala.MatchError: DrySubstrate(None,None,None) (of class d2spa.shared.DrySubstrate)
	at models.EORepoActor$$anonfun$receive$1.applyOrElse(EORepoActor.scala:1213)
	at akka.actor.Actor.aroundReceive(Actor.scala:517)
	at akka.actor.Actor.aroundReceive$(Actor.scala:515)
	at models.EORepoActor.aroundReceive(EORepoActor.scala:268)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:588)
	at akka.actor.ActorCell.invoke(ActorCell.scala:557)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:258)
	at akka.dispatch.Mailbox.run(Mailbox.scala:225)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:235)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	
	
TODO
______

1) Shared library in order to use it in different projects
2) Send rules and eo processing (Save, fetch etc) in parallel, to the 2 differents actors at the same time

	