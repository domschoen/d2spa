Callback.scala:120 Save new EO: Customer
client-jsdeps.js:33270 Customer -> CacheHandler | SaveNewEO EO(Customer,List(acronym, address, name),List(StringValue(1), StringValue(1), StringValue(1)),EOPk(List(-1)),None)
System.scala:367 Send NewEO(Customer,EO(Customer,List(acronym, address, name),List(StringValue(1), StringValue(1), StringValue(1)),EOPk(List(-1)),None))
System.scala:367 Send 512 bytes
System.scala:367 Will read socket
client-jsdeps.js:33270 Customer -> CacheHandler | SavingEO EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(-1)),None)
client-jsdeps.js:33270 Customer ->  v EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(-1)),None)
System.scala:367 insertedEOs Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(acronym, address, name),List(StringValue(1), StringValue(1), StringValue(1)),EOPk(List(-1)),None)))
System.scala:367 insertedEOs remove eo EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(-1)),None)
System.scala:367 insertedEOs updated Map(Customer -> Map())
client-jsdeps.js:33270 Customer -> CacheHandler | SavedEO | removed if new  true
client-jsdeps.js:33270 Customer -> CacheHandler | SavedEO | pk out of EO  Some(EOPk(List(2)))
client-jsdeps.js:33270 Customer -> CacheHandler | SavedEO | register eo  EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
System.scala:367 Zcache Map()
System.scala:367 Zcache List(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
System.scala:367 Zresult before Map()
System.scala:367 Zresult Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)))
client-jsdeps.js:33270 Customer -> CacheHandler | SavedEO update cache, call action Register with context D2WContext(Some(Customer),Some(inspect),None,Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(),List(),EOPk(List(-1)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-1))
client-jsdeps.js:33270 Cache Map(Customer -> Map())
client-jsdeps.js:33270 e name Customer
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: None
client-jsdeps.js:33270 PreviousPageHandler | RegisterPreviousPage for d2wContext: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | will Mount Customer
client-jsdeps.js:33270 D2WEditPage | willMount eo Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage | willMount d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage | mounted | socketReady: true dataNotFetched: true previousPageHasBeenSet: true alreadySent: false
client-jsdeps.js:33270 D2WEditPage | mounted | some eo
client-jsdeps.js:33270 D2WEditPage: willMount actionList List(Hydration(DrySubstrate(None,Some(EOFault(Customer,EOPk(List(2)))),None),WateringScope(PotFiredRuleResult(Left(FireRule(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),displayPropertyKeys))))))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV))))))
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(None,Some(EOFault(Customer,EOPk(List(2)))),None) wateringScope: WateringScope(PotFiredRuleResult(Left(FireRule(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),displayPropertyKeys))))
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration:  wateringScope with rule To File: 
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: wateringScope with rule To File: firing | rhs FiringD2WContext(Some(Customer),Some(inspect),None,PotFiringKey(Right(None)))
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: wateringScope with rule To File: firing | key displayPropertyKeys
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Customer),Some(inspect),None,PotFiringKey(Right(None))),displayPropertyKeys)
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV))))))
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage InspectPage(Customer,2)
client-jsdeps.js:33270 PreviousPageHandler | InitMetaData: Some(Customer)
System.scala:367 Send GetMetaData(D2WContextFullFledged(Some(Customer),Some(inspect),None,None))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV))))))
2System.scala:367 Will read socket
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV)))), inspect -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects)))),false,Map()))))
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV)))), inspect -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),componentName,RuleValue(Some(ERDList),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV))))))
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> ERDList render Customer task Some(inspect) propertyKey Some(projects) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Customer -> : None
client-jsdeps.js:33270 Customer -> ERDList render | listConfigurationNameOpt None
client-jsdeps.js:33270 Customer -> ERDList render | dataRep Customer propertyName: projects destinationEntityName: Project
client-jsdeps.js:33270 Project -> NVListComponent render for entity: Project
client-jsdeps.js:33270 Project -> NVListComponent mounted for Some(Project) task Some(list) page configuration toBeFired
client-jsdeps.js:33270 Project -> NVListComponent mounted: entity: Project
client-jsdeps.js:33270 Project -> NVListComponent mounted: d2wContext: D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Left(FireRule(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,Some(projects),PotFiredKey(Right(None)),None),listConfigurationName))),None)
client-jsdeps.js:33270 Project -> NVListComponent mounted: fireDisplayPropertyKeys: false
client-jsdeps.js:33270 Project -> NVListComponent mounted: some drySubstrate
client-jsdeps.js:33270 Project -> NVListComponent mounted: drySubstrate | displayPropertyKeys is none DrySubstrate(Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)),None,None)
client-jsdeps.js:33270 Project -> NVListComponent mounted: hydration is defined true
client-jsdeps.js:33270 Project -> NVListComponent mounted: FireActions: 7
client-jsdeps.js:33270 Project -> NVListComponent mounted: actions: List(FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Left(FireRule(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,Some(projects),PotFiredKey(Right(None)),None),listConfigurationName))),None),displayPropertyKeys), FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Left(FireRule(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,Some(projects),PotFiredKey(Right(None)),None),listConfigurationName))),None),isEditAllowed), FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Left(FireRule(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,Some(projects),PotFiredKey(Right(None)),None),listConfigurationName))),None),isInspectAllowed), FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Left(FireRule(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,Some(projects),PotFiredKey(Right(None)),None),listConfigurationName))),None),displayNameForEntity), Hydration(DrySubstrate(Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)),None,None),WateringScope(PotFiredRuleResult(Left(FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Left(FireRule(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,Some(projects),PotFiredKey(Right(None)),None),listConfigurationName))),None),displayPropertyKeys))))))
client-jsdeps.js:33270 Customer -> ERDList mounted Customer task Some(inspect) propertyKey Some(projects) page configuration PotFiredKey(Right(None))
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Left(RuleToFire(FiringD2WContext(Some(Customer),Some(inspect),Some(projects),PotFiringKey(Right(None))),listConfigurationName)))),displayPropertyKeys)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Left(RuleToFire(FiringD2WContext(Some(Customer),Some(inspect),Some(projects),PotFiringKey(Right(None))),listConfigurationName)))),isEditAllowed)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Left(RuleToFire(FiringD2WContext(Some(Customer),Some(inspect),Some(projects),PotFiringKey(Right(None))),listConfigurationName)))),isInspectAllowed)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Left(RuleToFire(FiringD2WContext(Some(Customer),Some(inspect),Some(projects),PotFiringKey(Right(None))),listConfigurationName)))),displayNameForEntity)
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)),None,None) wateringScope: WateringScope(PotFiredRuleResult(Left(FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Left(FireRule(D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,Some(projects),PotFiredKey(Right(None)),None),listConfigurationName))),None),displayPropertyKeys))))
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration:  wateringScope with rule To File: 
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: wateringScope with rule To File: firing | rhs FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Left(RuleToFire(FiringD2WContext(Some(Customer),Some(inspect),Some(projects),PotFiringKey(Right(None))),listConfigurationName))))
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: wateringScope with rule To File: firing | key displayPropertyKeys
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Left(RuleToFire(FiringD2WContext(Some(Customer),Some(inspect),Some(projects),PotFiringKey(Right(None))),listConfigurationName)))),displayPropertyKeys)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Customer),Some(inspect),Some(projects),PotFiringKey(Right(None))),listConfigurationName)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Customer),Some(inspect),Some(projects),PotFiringKey(Right(None))),destinationEntity)
System.scala:367 Send 512 bytes
2System.scala:367 Will read socket
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV)))), inspect -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),listConfigurationName,RuleValue(Some(ListEmbeddedProjectsInCustomer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),componentName,RuleValue(Some(ERDList),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV))))))
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> ERDList render Customer task Some(inspect) propertyKey Some(projects) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Customer -> : None
client-jsdeps.js:33270 Customer -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedProjectsInCustomer)
client-jsdeps.js:33270 Customer -> ERDList render | dataRep Customer propertyName: projects destinationEntityName: Project
client-jsdeps.js:33270 Project -> NVListComponent mounted for Some(Project) task Some(list) page configuration Some(ListEmbeddedProjectsInCustomer)
client-jsdeps.js:33270 Project -> NVListComponent mounted: entity: Project
client-jsdeps.js:33270 Project -> NVListComponent mounted: d2wContext: D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer))),None)
client-jsdeps.js:33270 Project -> NVListComponent mounted: fireDisplayPropertyKeys: false
client-jsdeps.js:33270 Project -> NVListComponent mounted: some drySubstrate
client-jsdeps.js:33270 Project -> NVListComponent mounted: drySubstrate | displayPropertyKeys is none DrySubstrate(Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)),None,None)
client-jsdeps.js:33270 Project -> NVListComponent mounted: hydration is defined true
client-jsdeps.js:33270 Project -> NVListComponent mounted: FireActions: 7
client-jsdeps.js:33270 Project -> NVListComponent mounted: actions: List(FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer))),None),displayPropertyKeys), FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer))),None),isEditAllowed), FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer))),None),isInspectAllowed), FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer))),None),displayNameForEntity), Hydration(DrySubstrate(Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)),None,None),WateringScope(PotFiredRuleResult(Left(FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer))),None),displayPropertyKeys))))))
client-jsdeps.js:33270 Project -> NVListComponent render for entity: Project
client-jsdeps.js:33270 Project -> NVListComponent render |  Some(Project) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer)))
client-jsdeps.js:33270 Project -> NVListComponent render task displayPropertyKeys List()
client-jsdeps.js:33270 Project -> NVListComponent render | Inspect: false Edit: false Clone: false
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath projects
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Project -> NVListComponent render eos List()
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Right(Some(ListEmbeddedProjectsInCustomer)))),displayPropertyKeys)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Right(Some(ListEmbeddedProjectsInCustomer)))),isEditAllowed)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Right(Some(ListEmbeddedProjectsInCustomer)))),isInspectAllowed)
System.scala:367 Send 512 bytes
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Right(Some(ListEmbeddedProjectsInCustomer)))),displayNameForEntity)
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: DrySubstrate(Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)),None,None) wateringScope: WateringScope(PotFiredRuleResult(Left(FireRule(D2WContext(Some(Project),Some(list),None,None,Map(),Some(DataRep(None,Some(EOsAtKeyPath(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None),projects,Project)))),None,PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer))),None),displayPropertyKeys))))
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration:  wateringScope with rule To File: 
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: wateringScope with rule To File: firing | rhs FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Right(Some(ListEmbeddedProjectsInCustomer))))
client-jsdeps.js:33270 RuleResultsHandler | FireActions | Hydration: wateringScope with rule To File: firing | key displayPropertyKeys
System.scala:367 Send RuleToFire(FiringD2WContext(Some(Project),Some(list),None,PotFiringKey(Right(Some(ListEmbeddedProjectsInCustomer)))),displayPropertyKeys)
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV)))), inspect -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),destinationEntity,RuleValue(Some(Project),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),listConfigurationName,RuleValue(Some(ListEmbeddedProjectsInCustomer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),componentName,RuleValue(Some(ERDList),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV))))))
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> ERDList render Customer task Some(inspect) propertyKey Some(projects) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Customer -> : Some(Project)
client-jsdeps.js:33270 Customer -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedProjectsInCustomer)
client-jsdeps.js:33270 Customer -> ERDList render | dataRep Customer propertyName: projects destinationEntityName: Project
client-jsdeps.js:33270 Project -> NVListComponent render for entity: Project
client-jsdeps.js:33270 Project -> NVListComponent render |  Some(Project) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer)))
client-jsdeps.js:33270 Project -> NVListComponent render task displayPropertyKeys List()
client-jsdeps.js:33270 Project -> NVListComponent render | Inspect: false Edit: false Clone: false
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath projects
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Project -> NVListComponent render eos List()
5System.scala:367 Will read socket
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV)))), list -> Map(ListEmbeddedProjectsInCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),displayPropertyKeys,RuleValue(None,List(projectNumber, descr)))),false,Map()))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV)))), inspect -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),destinationEntity,RuleValue(Some(Project),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),listConfigurationName,RuleValue(Some(ListEmbeddedProjectsInCustomer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),componentName,RuleValue(Some(ERDList),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV))))))
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> ERDList render Customer task Some(inspect) propertyKey Some(projects) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Customer -> : Some(Project)
client-jsdeps.js:33270 Customer -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedProjectsInCustomer)
client-jsdeps.js:33270 Customer -> ERDList render | dataRep Customer propertyName: projects destinationEntityName: Project
client-jsdeps.js:33270 Project -> NVListComponent render for entity: Project
client-jsdeps.js:33270 Project -> NVListComponent render |  Some(Project) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer)))
client-jsdeps.js:33270 Project -> NVListComponent render task displayPropertyKeys List(projectNumber, descr)
client-jsdeps.js:33270 Project -> NVListComponent render | Inspect: false Edit: false Clone: false
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath projects
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Project -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV)))), list -> Map(ListEmbeddedProjectsInCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),displayPropertyKeys,RuleValue(None,List(projectNumber, descr)))),false,Map()))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV)))), inspect -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),destinationEntity,RuleValue(Some(Project),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),listConfigurationName,RuleValue(Some(ListEmbeddedProjectsInCustomer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),componentName,RuleValue(Some(ERDList),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV))))))
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> ERDList render Customer task Some(inspect) propertyKey Some(projects) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Customer -> : Some(Project)
client-jsdeps.js:33270 Customer -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedProjectsInCustomer)
client-jsdeps.js:33270 Customer -> ERDList render | dataRep Customer propertyName: projects destinationEntityName: Project
client-jsdeps.js:33270 Project -> NVListComponent render for entity: Project
client-jsdeps.js:33270 Project -> NVListComponent render |  Some(Project) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer)))
client-jsdeps.js:33270 Project -> NVListComponent render task displayPropertyKeys List(projectNumber, descr)
client-jsdeps.js:33270 Project -> NVListComponent render | Inspect: true Edit: false Clone: false
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath projects
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Project -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV)))), list -> Map(ListEmbeddedProjectsInCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),displayPropertyKeys,RuleValue(None,List(projectNumber, descr)))),false,Map()))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV)))), inspect -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),destinationEntity,RuleValue(Some(Project),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),listConfigurationName,RuleValue(Some(ListEmbeddedProjectsInCustomer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),componentName,RuleValue(Some(ERDList),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV))))))
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> ERDList render Customer task Some(inspect) propertyKey Some(projects) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Customer -> : Some(Project)
client-jsdeps.js:33270 Customer -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedProjectsInCustomer)
client-jsdeps.js:33270 Customer -> ERDList render | dataRep Customer propertyName: projects destinationEntityName: Project
client-jsdeps.js:33270 Project -> NVListComponent render for entity: Project
client-jsdeps.js:33270 Project -> NVListComponent render |  Some(Project) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer)))
client-jsdeps.js:33270 Project -> NVListComponent render task displayPropertyKeys List(projectNumber, descr)
client-jsdeps.js:33270 Project -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath projects
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Project -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV)))), list -> Map(ListEmbeddedProjectsInCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),displayNameForEntity,RuleValue(Some(Project),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),displayPropertyKeys,RuleValue(None,List(projectNumber, descr)))),true,Map()))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV)))), inspect -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),destinationEntity,RuleValue(Some(Project),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),listConfigurationName,RuleValue(Some(ListEmbeddedProjectsInCustomer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),componentName,RuleValue(Some(ERDList),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV))))))
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> ERDList render Customer task Some(inspect) propertyKey Some(projects) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Customer -> : Some(Project)
client-jsdeps.js:33270 Customer -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedProjectsInCustomer)
client-jsdeps.js:33270 Customer -> ERDList render | dataRep Customer propertyName: projects destinationEntityName: Project
client-jsdeps.js:33270 Project -> NVListComponent render for entity: Project
client-jsdeps.js:33270 Project -> NVListComponent render |  Some(Project) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer)))
client-jsdeps.js:33270 Project -> NVListComponent render task displayPropertyKeys List(projectNumber, descr)
client-jsdeps.js:33270 Project -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath projects
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Project -> NVListComponent render eos List()
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(Customer -> Map(EOPk(List(2)) -> EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))),Map(Customer -> Map()))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(inspect),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV)))), list -> Map(ListEmbeddedProjectsInCustomer -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),displayPropertyKeys,RuleValue(None,List(projectNumber, descr))), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),displayNameForEntity,RuleValue(Some(Project),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),isEditAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),isInspectAllowed,RuleValue(Some(true),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(list),None,Some(ListEmbeddedProjectsInCustomer)),displayPropertyKeys,RuleValue(None,List(projectNumber, descr)))),true,Map()))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV)))), inspect -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects))), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayNameForEntity,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name, projects)))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),componentName,RuleValue(Some(ERD2WDisplayString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projects -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),destinationEntity,RuleValue(Some(Project),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),listConfigurationName,RuleValue(Some(ListEmbeddedProjectsInCustomer),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),componentName,RuleValue(Some(ERDList),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),displayNameForProperty,RuleValue(Some(Projects),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(inspect),Some(projects),None),attributeType,RuleValue(Some(eosV),List()))),stringV))))))
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Customer -> ERDList render Customer task Some(inspect) propertyKey Some(projects) page configuration PotFiredKey(Right(None))
client-jsdeps.js:33270 Customer -> : Some(Project)
client-jsdeps.js:33270 Customer -> ERDList render | listConfigurationNameOpt Some(ListEmbeddedProjectsInCustomer)
client-jsdeps.js:33270 Customer -> ERDList render | dataRep Customer propertyName: projects destinationEntityName: Project
client-jsdeps.js:33270 Project -> NVListComponent render for entity: Project
client-jsdeps.js:33270 Project -> NVListComponent render |  Some(Project) task Some(list) propertyKey None page configuration PotFiredKey(Right(Some(ListEmbeddedProjectsInCustomer)))
client-jsdeps.js:33270 Project -> NVListComponent render task displayPropertyKeys List(projectNumber, descr)
client-jsdeps.js:33270 Project -> NVListComponent render | Inspect: true Edit: true Clone: false
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath projects
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo EO(Customer,List(acronym, address, name, id),List(StringValue(1), StringValue(1), StringValue(1), IntValue(2)),EOPk(List(2)),None)
client-jsdeps.js:33270 Project -> NVListComponent render eosAtKeyPath | eo at key path is None
client-jsdeps.js:33270 Project -> NVListComponent render eos List()