client-jsdeps.js:33270 new EO for entity EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))
Callback.scala:120 New EO for: EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))
client-jsdeps.js:33270 PreviousPageHandler | RegisterPreviousPage for d2wContext: D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: true
client-jsdeps.js:33270 Render Query page for entity: Customer
System.scala:367 SPAMain | Router previous page D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WQueryPage | mounted Customer
client-jsdeps.js:33270 D2WQueryPage | mounted | socketReady: true dataNotFetched: true
client-jsdeps.js:33270 Render Query page for entity: Customer
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage NewEOPage(Customer)
client-jsdeps.js:33270 PreviousPageHandler | InitMetaData: Some(Customer)
System.scala:367 Send GetMetaData(D2WContextFullFledged(Some(Customer),Some(edit),None,None))
System.scala:367 Send 512 bytes
client-jsdeps.js:33270 D2WEditPage | will Mount Customer
client-jsdeps.js:33270 D2WEditPage | willMount eo None
client-jsdeps.js:33270 D2WEditPage | willMount d2wContext D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage | mounted | socketReady: true dataNotFetched: true previousPageHasBeenSet: true alreadySent: true
client-jsdeps.js:33270 Customer -> CacheHandler | NewEOWithEOModel: D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
System.scala:367 value.insertedEOs Map()
System.scala:367 entityName Customer
client-jsdeps.js:33270 Customer -> newValue Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None)))
client-jsdeps.js:33270 Customer -> newEO EO(Customer,List(),List(),EOPk(List(-1)),None)
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(),Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : None
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(),Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : None
client-jsdeps.js:33270 PreviousPageHandler | RegisterPreviousPage for d2wContext: D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(),Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(),List(),EOPk(List(-1)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-1))
client-jsdeps.js:33270 Cache Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None)))
client-jsdeps.js:33270 e name Customer
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(),List(),EOPk(List(-1)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))))
client-jsdeps.js:33270 AfterEffectRouter D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 Set Router to page EditPage(Customer,-1)
client-jsdeps.js:33270 AfterEffectRouter | setRouterToPage EditPage(Customer,-1)
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(),Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(),List(),EOPk(List(-1)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-1))
client-jsdeps.js:33270 Cache Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None)))
client-jsdeps.js:33270 e name Customer
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(),List(),EOPk(List(-1)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))))
System.scala:367 Will read socket
client-jsdeps.js:33270 RuleResultsHandler | SetJustRuleResults
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | currentProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage | willReceiveProps | nextProps: Props(Contramap(Contramap(japgolly.scalajs.react.extra.router.RouterLogic$$anon$1@25,<function1>),NestedTaskAppPage),D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None),ModelProxy(diode.ZoomModelR@26,<function1>,d2spa.client.services.MyCircuit$@27))
client-jsdeps.js:33270 D2WEditPage: render eo for entity Name: D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: eocache : EOCache(Ready(EOModel(List(EOEntity(Project,List(id),List(customerID, descr, id, projectNumber),List(EORelationship(List(customerID),customer,Customer))), EOEntity(Customer,List(id),List(acronym, address, id, name),List(EORelationship(List(id),projects,Project)))))),Map(),Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None))))
client-jsdeps.js:33270 D2WEditPage: render eo with fresh context : D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render eo : Some(EO(Customer,List(),List(),EOPk(List(-1)),None))
client-jsdeps.js:33270 Out of cache EOPk(List(-1))
client-jsdeps.js:33270 Cache Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None)))
client-jsdeps.js:33270 e name Customer
client-jsdeps.js:33270 D2WEditPage: render eo out of cache: Some(EO(Customer,List(),List(),EOPk(List(-1)),None))
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched with d2wContext D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Customer),Some(edit),Some(D2WContext(Some(Project),Some(query),None,None,Map(),None,None,PotFiredKey(Right(None)),None)),None,Map(),None,None,PotFiredKey(Right(None)),None)),Some(EO(Customer,List(),List(),EOPk(List(-1)),None)),Map(),None,None,PotFiredKey(Right(None)),None)
client-jsdeps.js:33270 D2WEditPage: render check meta data fetched in rules Map(Project -> Map(query -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayPropertyKeys,RuleValue(None,List(customer, descr, projectNumber))), RuleResult(D2WContextFullFledged(Some(Project),Some(query),None,None),displayNameForEntity,RuleValue(Some(Project),List()))),true,Map(customer -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),keyWhenRelationship,RuleValue(Some(name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForKeyWhenRelationship,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),componentName,RuleValue(Some(ERD2WQueryToOneField),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),displayNameForProperty,RuleValue(Some(Customer),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(customer),None),attributeType,RuleValue(Some(eoV),List()))),stringV), descr -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),componentName,RuleValue(Some(ERD2WQueryStringOperator),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),displayNameForProperty,RuleValue(Some(Description),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(descr),None),attributeType,RuleValue(Some(stringV),List()))),stringV), projectNumber -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),componentName,RuleValue(Some(ERD2WQueryNumberRange),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),displayNameForProperty,RuleValue(Some(Project Number),List())), RuleResult(D2WContextFullFledged(Some(Project),Some(query),Some(projectNumber),None),attributeType,RuleValue(Some(intV),List()))),stringV))))), Customer -> Map(edit -> Map(NoPageConfiguration -> PageConfigurationRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayPropertyKeys,RuleValue(None,List(acronym, address, name))), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),None,None),displayNameForEntity,RuleValue(Some(Customer),List()))),true,Map(acronym -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),displayNameForProperty,RuleValue(Some(Acronym),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(acronym),None),attributeType,RuleValue(Some(stringV),List()))),stringV), address -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),displayNameForProperty,RuleValue(Some(Address),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(address),None),attributeType,RuleValue(Some(stringV),List()))),stringV), name -> PropertyRuleResults(List(RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),componentName,RuleValue(Some(ERD2WEditString),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),displayNameForProperty,RuleValue(Some(Name),List())), RuleResult(D2WContextFullFledged(Some(Customer),Some(edit),Some(name),None),attributeType,RuleValue(Some(stringV),List()))),stringV))))))
client-jsdeps.js:33270 entityMetaDatas not empty
client-jsdeps.js:33270 Edit page EO EO(Customer,List(),List(),EOPk(List(-1)),None)
client-jsdeps.js:33270 MenuHeader, render, Menu not empty
client-jsdeps.js:33270 Out of cache EOPk(List(-1))
client-jsdeps.js:33270 Cache Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None)))
client-jsdeps.js:33270 e name Customer
client-jsdeps.js:33270 Out of cache EOPk(List(-1))
client-jsdeps.js:33270 Cache Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None)))
client-jsdeps.js:33270 e name Customer
client-jsdeps.js:33270 Out of cache EOPk(List(-1))
client-jsdeps.js:33270 Cache Map(Customer -> Map(EOPk(List(-1)) -> EO(Customer,List(),List(),EOPk(List(-1)),None)))
client-jsdeps.js:33270 e name Customer